{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport CircularProgress from 'react-native-circular-progress-indicator';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var setQuez_list = _ref.setQuez_list,\n    navigateToScreen = _ref.navigateToScreen;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    percentage = _useState2[0],\n    setPercentage = _useState2[1];\n  var alphabet = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P'];\n  useEffect(function () {\n    var loadPercentage = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var _loop = function* _loop(letter) {\n            var key = `Q_${letter}`;\n            var value = yield AsyncStorage.getItem(key);\n            if (value) {\n              var parsedValue = JSON.parse(value);\n              var trueResponse = parsedValue.true_response || 0;\n              var calculatedPercentage = trueResponse / 30 * 100;\n              setPercentage(function (prevPercentage) {\n                return _objectSpread(_objectSpread({}, prevPercentage), {}, _defineProperty({}, letter, calculatedPercentage));\n              });\n            }\n          };\n          for (var letter of alphabet) {\n            yield* _loop(letter);\n          }\n        } catch (error) {}\n      });\n      return function loadPercentage() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    loadPercentage();\n  }, []);\n  var handleButtonPress = function handleButtonPress(letter) {\n    var key = `Q_${letter}`;\n    setQuez_list(key);\n    navigateToScreen(\"Quiz\");\n  };\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item;\n    return _jsxs(TouchableOpacity, {\n      style: styles.tou,\n      onPress: function onPress() {\n        return handleButtonPress(item);\n      },\n      children: [_jsx(CircularProgress, {\n        value: percentage[item] || 0,\n        maxValue: 100,\n        activeStrokeWidth: 11,\n        radius: 40,\n        progressValueStyle: {\n          fontSize: 20,\n          color: 'white',\n          fontFamily: 'Cairo_Regular'\n        },\n        progressValueColor: '#ecf0f1',\n        valueSuffix: '%',\n        strokeColorConfig: [{\n          color: 'yellowgreen',\n          value: 50\n        }, {\n          color: 'red',\n          value: 0\n        }]\n      }), _jsxs(Text, {\n        style: styles.buttonText,\n        children: [\"Question list \", item]\n      })]\n    });\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(FlatList, {\n      style: styles.fl,\n      data: alphabet,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      },\n      numColumns: 2,\n      contentContainerStyle: styles.flatListContainer\n    })\n  });\n};\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width;\nvar styles = StyleSheet.create({\n  tou: {\n    margin: 20,\n    alignItems: \"center\",\n    width: (width - 60) / 2\n  },\n  container: {\n    margin: 50,\n    alignItems: \"center\",\n    direction: \"column\",\n    flex: 1\n  },\n  flatListContainer: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 15\n  },\n  fl: {\n    borderColor: \"black\",\n    flexDirection: \"column\",\n    width: width - 30\n  },\n  button: {\n    backgroundColor: '#f0f0f0',\n    borderRadius: 8,\n    width: 200,\n    padding: 10,\n    margin: 10\n  },\n  buttonText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: \"center\"\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useEffect","FlatList","Text","View","TouchableOpacity","StyleSheet","Dimensions","CircularProgress","AsyncStorage","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","setQuez_list","navigateToScreen","_useState","_useState2","_slicedToArray","percentage","setPercentage","alphabet","loadPercentage","_ref2","_asyncToGenerator","_loop","letter","key","value","getItem","parsedValue","JSON","parse","trueResponse","true_response","calculatedPercentage","prevPercentage","_objectSpread","_defineProperty","error","apply","arguments","handleButtonPress","renderItem","_ref3","item","style","styles","tou","onPress","children","maxValue","activeStrokeWidth","radius","progressValueStyle","fontSize","color","fontFamily","progressValueColor","valueSuffix","strokeColorConfig","buttonText","container","fl","data","keyExtractor","index","toString","numColumns","contentContainerStyle","flatListContainer","_Dimensions$get","get","width","create","margin","alignItems","direction","flex","flexGrow","justifyContent","paddingHorizontal","borderColor","flexDirection","button","backgroundColor","borderRadius","padding","fontWeight","textAlign"],"sources":["/workspaces/hkhttat7/perme/cmp/Home_SC.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FlatList, Text, View, TouchableOpacity, StyleSheet, Dimensions } from 'react-native';\nimport CircularProgress from 'react-native-circular-progress-indicator';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst HomeScreen = ({ setQuez_list, navigateToScreen }) => {\n  const [percentage, setPercentage] = useState(0);\n  const alphabet = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P'];\n\n  useEffect(() => {\n    const loadPercentage = async () => {\n      try {\n        // Load data from AsyncStorage for each item in the alphabet array\n        for (const letter of alphabet) {\n          const key = `Q_${letter}`;\n          const value = await AsyncStorage.getItem(key);\n          if (value) {\n            const parsedValue = JSON.parse(value);\n            const trueResponse = parsedValue.true_response || 0; // Default to 0 if true_response is not available\n            const calculatedPercentage = (trueResponse / 30) * 100;\n            setPercentage(prevPercentage => ({\n              ...prevPercentage,\n              [letter]: calculatedPercentage\n            }));\n          }\n        }\n      } catch (error) {\n        //console.log('Error loading data:', error);\n      }\n    };\n\n    loadPercentage();\n  }, []);\n\n  const handleButtonPress = (letter) => {\n    const key = `Q_${letter}`;\n    setQuez_list(key);\n    navigateToScreen(\"Quiz\");\n  };\n\n  const renderItem = ({ item }) => (\n    <TouchableOpacity\n      style={styles.tou}\n      onPress={() => handleButtonPress(item)}\n    >\n      <CircularProgress\n        value={percentage[item] || 0}\n        maxValue={100}\n        activeStrokeWidth={11}\n        radius={40}\n        progressValueStyle={{ fontSize: 20, color: 'white', fontFamily: 'Cairo_Regular' }}\n        progressValueColor={'#ecf0f1'}\n        valueSuffix={'%'}\n        strokeColorConfig={[\n          { color: 'yellowgreen', value: 50 },\n          { color: 'red', value: 0 },\n        ]}\n      />\n      <Text style={styles.buttonText}>Question list {item}</Text>\n    </TouchableOpacity>\n  );\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        style={styles.fl}\n        data={alphabet}\n        renderItem={renderItem}\n        keyExtractor={(item, index) => index.toString()}\n        numColumns={2}\n        contentContainerStyle={styles.flatListContainer}\n      />\n    </View>\n  );\n};\n\nconst { width } = Dimensions.get('window');\n\nconst styles = StyleSheet.create({\n  tou: {\n    margin: 20,\n    alignItems: \"center\",\n    width: (width - 60) / 2, // Adjusted width for each item\n  },\n  container: {\n    margin:50,\n    alignItems: \"center\",\n    direction: \"column\",\n    flex: 1, // Fill available space\n  },\n  flatListContainer: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 15, // Adjusted paddingHorizontal\n  },\n  fl: {\n    borderColor: \"black\",\n    flexDirection: \"column\",\n    width: width - 30, // Adjusted width\n  },\n  button: {\n    backgroundColor: '#f0f0f0',\n    borderRadius: 8,\n    width: 200,\n    padding: 10,\n    margin: 10,\n  },\n  buttonText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: \"center\"\n  },\n});\n\nexport default HomeScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}